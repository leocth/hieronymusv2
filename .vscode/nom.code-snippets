{
	// Place your hieronymusv2 workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"nom-derive": {
		"scope": "rust",
		"prefix": "nd",
		"body": [
			"#[derive(Debug, Nom)]",
			"struct $1 {$0}",
			"#[async_trait]",
			"impl Packet for $1 {",
			"    #[instrument(skip(conn))]",
			"    async fn handle(&self, conn: &mut Connection) -> eyre::Result<()> {",
			"        Ok(())",
			"    }",
			"}"
		]
	},
	"VarInt": {
		"scope": "rust",
		"prefix": "vi",
		"body": [
			"#[nom(Parse = \"varint\")]",
			"$1: u32,$0",
		]
	},
	"VarStr": {
		"scope": "rust",
		"prefix": "vs",
		"body": [
			"#[nom(Parse = \"var_str\")]",
			"$1: &'a str,$0",
		]
	},
	"nom(Parse=)": {
		"scope": "rust",
		"prefix": "np",
		"body": [
			"#[nom(Parse = \"$0\")]",
		]
	},
	"boolean": {
		"scope": "rust",
		"prefix": "bl",
		"body": [
			"#[nom(Parse = \"boolean\")]",
			"$1: bool,$0",
		]
	}
}